<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ulpay.testplatform.mapper.TestMessageMapper">
    
    <resultMap type="com.ulpay.testplatform.domain.TestMessage" id="TestMessageResult">
        <result property="messageId"    column="message_id"    />
        <result property="messageName"    column="message_name"    />
        <result property="messageType"    column="message_type"    />
        <result property="messageRes"    column="message_res"    />
        <result property="messageProcess"    column="message_process"    />
        <result property="interfaceId"    column="interface_id"    />
        <result property="parameterJson"    column="parameter_json"    />
        <result property="status"    column="status"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectTestMessageVo">
        select message_id, message_name, message_type, message_res, message_process, interface_id, parameter_json, status, create_by, create_time, update_by, update_time, remark from test_message
    </sql>

    <select id="selectTestMessageList" parameterType="com.ulpay.testplatform.domain.TestMessage" resultMap="TestMessageResult">
        <include refid="selectTestMessageVo"/>
        <where>  
            <if test="messageName != null  and messageName != ''"> and message_name like concat('%', #{messageName}, '%')</if>
            <if test="messageType != null  and messageType != ''"> and message_type = #{messageType}</if>
            <if test="messageRes != null  and messageRes != ''"> and message_res = #{messageRes}</if>
            <if test="messageProcess != null  and messageProcess != ''"> and message_process = #{messageProcess}</if>
            <if test="interfaceId != null "> and interface_id = #{interfaceId}</if>
            <if test="parameterJson != null  and parameterJson != ''"> and parameter_json = #{parameterJson}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
        </where>
    </select>
    
    <select id="selectTestMessageById" parameterType="Long" resultMap="TestMessageResult">
        <include refid="selectTestMessageVo"/>
        where message_id = #{messageId}
    </select>
        
    <insert id="insertTestMessage" parameterType="com.ulpay.testplatform.domain.TestMessage" useGeneratedKeys="true" keyProperty="messageId">
        insert into test_message
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="messageName != null  and messageName != ''">message_name,</if>
            <if test="messageType != null  and messageType != ''">message_type,</if>
            <if test="messageRes != null  and messageRes != ''">message_res,</if>
            <if test="messageProcess != null  and messageProcess != ''">message_process,</if>
            <if test="interfaceId != null ">interface_id,</if>
            <if test="parameterJson != null  and parameterJson != ''">parameter_json,</if>
            <if test="status != null  and status != ''">status,</if>
            <if test="createBy != null  and createBy != ''">create_by,</if>
            <if test="createTime != null ">create_time,</if>
            <if test="updateBy != null  and updateBy != ''">update_by,</if>
            <if test="updateTime != null ">update_time,</if>
            <if test="remark != null  and remark != ''">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="messageName != null  and messageName != ''">#{messageName},</if>
            <if test="messageType != null  and messageType != ''">#{messageType},</if>
            <if test="messageRes != null  and messageRes != ''">#{messageRes},</if>
            <if test="messageProcess != null  and messageProcess != ''">#{messageProcess},</if>
            <if test="interfaceId != null ">#{interfaceId},</if>
            <if test="parameterJson != null  and parameterJson != ''">#{parameterJson},</if>
            <if test="status != null  and status != ''">#{status},</if>
            <if test="createBy != null  and createBy != ''">#{createBy},</if>
            <if test="createTime != null ">#{createTime},</if>
            <if test="updateBy != null  and updateBy != ''">#{updateBy},</if>
            <if test="updateTime != null ">#{updateTime},</if>
            <if test="remark != null  and remark != ''">#{remark},</if>
         </trim>
    </insert>

    <update id="updateTestMessage" parameterType="com.ulpay.testplatform.domain.TestMessage">
        update test_message
        <trim prefix="SET" suffixOverrides=",">
            <if test="messageName != null  and messageName != ''">message_name = #{messageName},</if>
            <if test="messageType != null  and messageType != ''">message_type = #{messageType},</if>
            <if test="messageRes != null  and messageRes != ''">message_res = #{messageRes},</if>
            <if test="messageProcess != null  and messageProcess != ''">message_process = #{messageProcess},</if>
            <if test="interfaceId != null ">interface_id = #{interfaceId},</if>
            <if test="parameterJson != null  and parameterJson != ''">parameter_json = #{parameterJson},</if>
            <if test="status != null  and status != ''">status = #{status},</if>
            <if test="createBy != null  and createBy != ''">create_by = #{createBy},</if>
            <if test="createTime != null ">create_time = #{createTime},</if>
            <if test="updateBy != null  and updateBy != ''">update_by = #{updateBy},</if>
            <if test="updateTime != null ">update_time = #{updateTime},</if>
            <if test="remark != null  and remark != ''">remark = #{remark},</if>
        </trim>
        where message_id = #{messageId}
    </update>

    <delete id="deleteTestMessageById" parameterType="Long">
        delete from test_message where message_id = #{messageId}
    </delete>

    <delete id="deleteTestMessageByIds" parameterType="String">
        delete from test_message where message_id in 
        <foreach item="messageId" collection="array" open="(" separator="," close=")">
            #{messageId}
        </foreach>
    </delete>
    
</mapper>